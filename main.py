import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# === CONFIGURATION ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
SUPPORT_CHAT_ID = os.getenv("SUPPORT_CHAT_ID", "-1002454833654")  # –≥—Ä—É–ø–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
if not BOT_TOKEN:
    raise RuntimeError("‚ùå BOT_TOKEN not found in environment variables")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# === SIMPLE REPLY MENU ===
def reply_menu():
    kb = [
        [KeyboardButton(text="üé¨ –ú–µ–Ω—é"), KeyboardButton(text="üí∞ –û–ø–ª–∞—Ç–∞")],
        [KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"), KeyboardButton(text="üë§ –ö–∞–±–∏–Ω–µ—Ç")]
    ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)

# === GLOBAL STATES ===
user_waiting_for_support = set()
user_waiting_for_video_orientation = {}

# === /start ===
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ <b>SORA 2 –æ—Ç Neurokudo</b>.\n\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–µ–æ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–Ω—è—Ç—å.\n"
        "–ü—Ä–∏–º–µ—Ä:\n<code>–†—ã–±–∞–∫–∏ –≤—ã—Ç–∞—Å–∫–∏–≤–∞—é—Ç —Å–µ—Ç—å, –≤ –Ω–µ–π —Ä—É—Å–∞–ª–∫–∞, —Å—ä—ë–º–∫–∞ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω</code>\n\n"
        "üé• –•–æ—á–µ—à—å –ø–æ—à–∞–≥–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é? ‚Üí /instructions",
        reply_markup=reply_menu()
    )

# === /help ===
@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    user_waiting_for_support.add(message.from_user.id)
    await message.answer("üß≠ –û–ø–∏—à–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å–∫–æ—Ä–æ!")

# === /instructions ===
@dp.message(Command("instructions"))
async def cmd_instructions(message: types.Message):
    await message.answer(
        "üí° –í—Å—ë –ø—Ä–æ—Å—Ç–æ:\n"
        "1Ô∏è‚É£ –ù–∞–ø–∏—à–∏ –∏–¥–µ—é –≤–∏–¥–µ–æ.\n"
        "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –≤–∏–¥–µ–æ (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –∏–ª–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è).\n"
        "3Ô∏è‚É£ –ë–æ—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç —Ç–≤–æ—ë –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –≤–∏–¥–µ–æ.\n\n"
        "–•–æ—á–µ—à—å –ø—Ä–∏–º–µ—Ä—ã –æ–ø–∏—Å–∞–Ω–∏–π? ‚Üí /templates"
    )

# === /templates ===
@dp.message(Command("templates"))
async def cmd_templates(message: types.Message):
    await message.answer(
        "üìò –ü—Ä–∏–º–µ—Ä—ã –∏–¥–µ–π –¥–ª—è –≤–∏–¥–µ–æ:\n\n"
        "üîπ –†—ã–±–∞–∫–∏ –≤—ã—Ç–∞—Å–∫–∏–≤–∞—é—Ç —Å–µ—Ç—å, –≤ –Ω–µ–π —Å—Ç—Ä–∞–Ω–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ.\n"
        "üîπ –ì—Ä–∏–±–Ω–∏–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç –¥–≤–∏–∂—É—â—É—é—Å—è –º–∞—Å—Å—É –ø–æ–¥ –ª–∏—Å—Ç—å—è–º–∏.\n"
        "üîπ –ë–∞–±—É—à–∫–∞ –∫–æ—Ä–º–∏—Ç –∫–∞–ø–∏–±–∞—Ä—É —É –æ–∫–Ω–∞, —Ä–∞—Å—Å–≤–µ—Ç.\n"
        "üîπ –°–æ–≤–µ—Ç—Å–∫–∏–µ —Ä–∞–±–æ—á–∏–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –∫–∞–ø—Å—É–ª—É –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        "–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π —Å–∞–º ‚Üí /video"
    )

# === /buy ===
@dp.message(Command("buy"))
async def cmd_buy(message: types.Message):
    await message.answer(
        "üí∞ –í—ã–±–µ—Ä–∏ –ø–∞–∫–µ—Ç:\n\n"
        "üê£ –ü—Ä–æ–±–Ω—ã–π ‚Äî 3 –≤–∏–¥–µ–æ ‚Üí ‚ÇΩ490\n"
        "üé¨ –ë–∞–∑–æ–≤—ã–π ‚Äî 10 –≤–∏–¥–µ–æ ‚Üí ‚ÇΩ1 290\n"
        "üöÄ –ú–∞–∫—Å–∏–º—É–º ‚Äî 30 –≤–∏–¥–µ–æ ‚Üí ‚ÇΩ2 990\n\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø–∞–∫–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —Å—Ä–∞–∑—É.\n"
        "–ö—É–ø–∏—Ç—å ‚Üí /buy",
        reply_markup=reply_menu()
    )

# === /profile ===
@dp.message(Command("profile"))
async def cmd_profile(message: types.Message):
    await message.answer(
        "üë§ –ö–∞–±–∏–Ω–µ—Ç\n"
        "üéû –û—Å—Ç–∞–ª–æ—Å—å –≤–∏–¥–µ–æ: {placeholder}\n"
        "üí° –¢–µ–∫—É—â–∏–π –ø–∞–∫–µ—Ç: {plan_name}\n"
        "üí∞ –í—Å–µ–≥–æ –æ–ø–ª–∞—á–µ–Ω–æ: {total_payments} ‚ÇΩ\n\n"
        "üîÅ –ö—É–ø–∏—Ç—å –µ—â—ë ‚Üí /buy\n"
        "üß† –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚Üí /instructions\n"
        "üìò –ü—Ä–∏–º–µ—Ä—ã ‚Üí /templates"
    )

# === /video ===
@dp.message(Command("video"))
async def cmd_video(message: types.Message):
    user_waiting_for_video_orientation[message.from_user.id] = None
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üì± –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ", callback_data="orientation_vertical"),
            InlineKeyboardButton(text="üñ• –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ", callback_data="orientation_horizontal")
        ]
    ])
    await message.answer("üìê –í—ã–±–µ—Ä–∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –±—É–¥—É—â–µ–≥–æ –≤–∏–¥–µ–æ:", reply_markup=markup)

# === CALLBACK: Orientation choice ===
@dp.callback_query()
async def orientation_callback(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    if callback.data == "orientation_vertical":
        user_waiting_for_video_orientation[user_id] = "vertical"
        await callback.message.answer("‚úÖ –í—ã–±—Ä–∞–Ω–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–Ω—è—Ç—å.")
    elif callback.data == "orientation_horizontal":
        user_waiting_for_video_orientation[user_id] = "horizontal"
        await callback.message.answer("‚úÖ –í—ã–±—Ä–∞–Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è.\n\n–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–Ω—è—Ç—å.")
    await callback.answer()

# === DEFAULT HANDLER ===
@dp.message()
async def handle_text(message: types.Message):
    user_id = message.from_user.id
    text = message.text.strip()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–π—á–∞—Å –ø–∏—à–µ—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
    if user_id in user_waiting_for_support:
        username = message.from_user.username or "–±–µ–∑ –Ω–∏–∫–∞"
        full_name = message.from_user.full_name
        chat_text = (
            f"üì© <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</b>\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username} ({full_name})\n"
            f"üÜî ID: <code>{user_id}</code>\n"
            f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:\n{text}"
        )
        try:
            await bot.send_message(SUPPORT_CHAT_ID, chat_text, parse_mode="HTML")
            await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ!")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: {e}")
            await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        user_waiting_for_support.remove(user_id)
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é, —Ç–æ —ç—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∏–¥–µ–æ
    if user_id in user_waiting_for_video_orientation and user_waiting_for_video_orientation[user_id]:
        orientation = user_waiting_for_video_orientation[user_id]
        await message.answer(
            f"üé¨ –ü—Ä–∏–Ω—è—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ!\n"
            f"üìê –û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è: <b>{'–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è' if orientation == 'vertical' else '–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è'}</b>\n"
            f"–í–∏–¥–µ–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ —á–µ—Ä–µ–∑ Sora 2 –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—é–¥–∞.\n\n"
            "üí° –ü—Ä–∏–º–µ—Ä –æ–ø–∏—Å–∞–Ω–∏—è: <code>–†—ã–±–∞–∫–∏ –≤ –ª–æ–¥–∫–µ –ø–æ–π–º–∞–ª–∏ —Ä—É—Å–∞–ª–∫—É</code>"
        )
        # –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—á–∏—Å—Ç–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        del user_waiting_for_video_orientation[user_id]
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –∫–æ–º–∞–Ω–¥—É
    if any(k in text.lower() for k in ["–º–µ–Ω—é", "–æ–ø–ª–∞—Ç–∞", "–ø–æ–º–æ—â—å", "–∫–∞–±–∏–Ω–µ—Ç"]):
        await cmd_start(message)
    else:
        await message.answer(
            "‚úèÔ∏è –û–ø–∏—à–∏ –∏–¥–µ—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /video, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é."
        )

# === ENTRYPOINT ===
async def start_bot():
    logging.info("üöÄ Launching sora2kudo-bot...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(start_bot())